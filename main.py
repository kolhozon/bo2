import asyncio
from aiogram import Bot, Dispatcher, F, types
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from config import BOT_TOKEN, ADMINS

bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def get_main_keyboard():
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üõí –ö—É–ø–∏—Ç—å", callback_data="buy")],
        [InlineKeyboardButton(text="‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="info")],
        [InlineKeyboardButton(text="üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url="https://t.me/your_support_bot")]
    ])
    return kb

@dp.message(F.text == "/start")
async def cmd_start(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ë–û–¢–ò–ö üëã", reply_markup=get_main_keyboard())
    if message.from_user.id in ADMINS:
        await message.answer("–¢—ã –∑–∞—à–µ–ª –∫–∞–∫ –∞–¥–º–∏–Ω üëë")

@dp.callback_query(F.data == "buy")
async def handle_buy(callback: types.CallbackQuery):
    await callback.message.answer("üí≥ –û–ø–ª–∞—Ç–∞ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∞!")

@dp.callback_query(F.data == "info")
async def handle_info(callback: types.CallbackQuery):
    await callback.message.answer("–ë–û–¢–ò–ö ‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏, –∞–¥–º–∏–Ω–∫–æ–π –∏ –ø–ª–∞—Ç—ë–∂–∫–æ–π.")

@dp.message(F.text == "/admin")
async def admin_cmd(message: types.Message):
    if message.from_user.id not in ADMINS:
        return await message.answer("‚õîÔ∏è –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤")
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω–∫—É üõ†Ô∏è")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())